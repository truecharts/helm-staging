name: "Charts: Release"

concurrency: helm-release

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: actions-runner-helmstaging
    steps:
    - name: Checkout
      uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # tag=v3
      with:
        token: ${{ secrets.BOT_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "TrueCharts-Bot"
        git config user.email "bot@truecharts.org"

    - name: Install Helm
      uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # tag=v3
      with:
        version: v3.14.0

    # Optional step if GPG signing is used
    - name: Prepare GPG key
      run: |
        gpg_dir=.cr-gpg
        mkdir "$gpg_dir"
        keyring="$gpg_dir/secring.gpg"
        base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
        passphrase_file="$gpg_dir/passphrase"
        echo "$GPG_PASSPHRASE" > "$passphrase_file"
        echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
        echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
      env:
        GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
        GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

    - name: Helm | Login
      shell: bash
      run: echo ${{ secrets.QUAY_SECRET }} | helm registry login -u ${{ secrets.QUAY_USER }} --password-stdin quay.io


    - name: Release Charts
      shell: bash
      env:
        CR_TOKEN: "${{ secrets.BOT_TOKEN }}"
        CR_SKIP_EXISTING: "true"
      run: |
        owner=$(cut -d '/' -f 1 <<< "$GITHUB_REPOSITORY")
        repo=$(cut -d '/' -f 2 <<< "$GITHUB_REPOSITORY")
        install="$RUNNER_TOOL_CACHE/cr/${{ inputs.version }}/$(uname -m)"
        echo "$install" >> "$GITHUB_PATH"
        ./.github/scripts/cr.sh --config "cr.yaml" --charts-dir 'charts/*' --quay-token "${{ secrets.QUAY_TOKEN }}" --owner "$owner" --repo "$repo" --install-dir "$install"
        if [[ -f changed_charts.txt ]]; then
            cat changed_charts.txt >> "$GITHUB_OUTPUT"
        fi
        if [[ -f chart_version.txt ]]; then
            cat chart_version.txt >> "$GITHUB_OUTPUT"
        fi
        rm -f changed_charts.txt chart_version.txt

    - name: Helm | Logout
      shell: bash
      run: helm registry logout quay.io

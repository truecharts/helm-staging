# Include{groups}
portals: {}
questions:
# Include{global}
# Include{credentials}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
                                - variable: imageSelector
                                  label: Select Image
                                  schema:
                                    type: string
                                    default: image
                                    enum:
                                      - value: image
                                        description: Image
                                      - value: ffmpegImage
                                        description: FFmpeg
                                      - value: cublasCuda12Image
                                        description: Cublas Cuda 12
                                      - value: cublasCuda12FfmpegImage
                                        description: Cublas Cuda 12 FFmpeg
                                      - value: cublasCuda11Image
                                        description: Cublas Cuda 11
                                      - value: cublasCuda11FfmpegImage
                                        description: Cublas Cuda 11 FFmpeg
                                      - value: allInOneCuda12Image
                                        description: All-in-one Cuda 12
                                      - value: allInOneCuda11Image
                                        description: All-in-one Cuda 11
                                      - value: allInOneCpuImage
                                        description: All-in-one CPU
# Include{containerBasic}
# Include{containerAdvanced}
  - variable: localai
    group: App Configuration
    label: LocalAI Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: build_type
          label: Build Type
          description: Specify a build type.
          schema:
            type: string
            default: "openblas"
            enum:
              - value: openblas
                description: Openblas
              - value: cublas
                description: Cublas
              - value: clblas
                description: Clblas
        - variable: debug
          label: Debug
          description: Enable Debug Mode.
          schema:
            type: boolean
            default: false
        - variable: galleries
          label: Galleries
          description: Models to install that will be visible in /models/available.
          schema:
            type: list
            default:
              - name: model-gallery
                url: github:go-skynet/model-gallery/index.yaml
            items:
              - variable: galleryEntry
                label: Gallery Type Entry
                schema:
                  type: dict
                  additional_attrs: true
                  attrs:
                    - variable: name
                      label: Name
                      schema:
                        type: string
                        required: true
                        default: ""
                    - variable: url
                      label: Url
                      schema:
                        type: string
                        required: true
                        default: ""
        - variable: preload_models
          label: Preload Models
          description: Preload models on start.
          schema:
            type: list
            default:
              - url: github:go-skynet/model-gallery/gpt4all-j.yaml
            items:
              - variable: preloadEntry
                label: Preload Type Entry
                schema:
                  type: dict
                  additional_attrs: true
                  attrs:
                    - variable: url
                      label: Url
                      schema:
                        type: string
                        required: true
                        default: ""
        - variable: cors
          label: Enable CORS
          schema:
            type: boolean
            default: true
            show_subquestions_if: true
            subquestions:
              - variable: cors_allow_origins
                label: Cors Allows Origins
                schema:
                  type: string
                  required: true
                  default: "*"
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 8080
                              required: true
# Include{externalInterfaces}

# Include{serviceList}
# Include{persistenceRoot}
        - variable: models
          label: App Models Storage
          description: Stores the Application Models.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: images
          label: App Images Storage
          description: Stores the Application Images.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
